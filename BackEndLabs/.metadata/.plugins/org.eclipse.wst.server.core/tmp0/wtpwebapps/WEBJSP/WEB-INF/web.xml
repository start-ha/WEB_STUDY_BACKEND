<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://jakarta.ee/xml/ns/jakartaee" xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_6_0.xsd" id="WebApp_ID" version="6.0">
  <display-name>WEBJSP</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    
    <!--  
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>default.htm</welcome-file>
    -->
    
  </welcome-file-list>
  <context-param>
  	<description>이 설명은 개발자의 마음대로</description>
  	<param-name>email</param-name>
  	<param-value>kosa@kosa.or.kr</param-value>
  </context-param>
   <context-param>
   	<description>기본 업로드 파일 경로</description>
  	<param-name>filePath</param-name>
  	<param-value>C:\MSA_EDU\WEB\WebBackend\BackEndLabs\WEBJSP\src\main\webapp</param-value>
   </context-param>
  <!-- 
  전역적인 예외 처리
  1. 상태코드 ( 500 서버, 404 요청 페이지, 403 접근 권한 )...
  2. 상세하게 설정가능(예외별로 처리 가능 >> nullPointException, indexOutOfRange) >> 실제 사용안한다 >> 사용자 예외정의 만들어서 처리.. 
   -->
  
 <!--  
  <servlet>
    <description></description>
    <display-name>Hello</display-name>
    <servlet-name>Hello</servlet-name>
    <servlet-class>Hello</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>Hello</servlet-name>
    <url-pattern>/Hello</url-pattern>
  </servlet-mapping>
 -->
 
 <!-- 
  실배포시 처리 
  상태코드로 에러 처리
  
	 <error-page>
	 	<error-code>404</error-code>
	 	<location>/error/Error404.jsp</location>
	 </error-page>
	 
	 <error-page>
	 	<error-code>500</error-code>
	 	<location>/error/Error500.jsp</location>
	 </error-page>
  -->
 
</web-app>